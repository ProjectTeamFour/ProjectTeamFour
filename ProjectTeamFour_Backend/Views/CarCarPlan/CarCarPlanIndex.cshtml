@*
    For more information on enabling MVC for empty projects, visit https://go.microsoft.com/fwlink/?LinkID=397860
*@
@{
}
@section topCSS{
    <style>
        table.b-table[aria-busy='true'] {
            opacity: 0.6;
        }

        .edit-form .invalid-feedback {
        }
    </style>

}

<div id="member" class="col-12 m-auto">
    <template>
        <b-container fluid>
            <!-- User Interface controls -->

            <b-row>
                @*分類模板*@
                <b-col lg="6" class="my-1">
                    <b-form-group label="分類"
                                  label-for="sort-by-select"
                                  label-cols-sm="3"
                                  label-align-sm="right"
                                  label-size="sm"
                                  class="mb-0"
                                  v-slot="{ ariaDescribedby }">
                        <b-input-group size="sm">
                            <b-form-select id="sort-by-select"
                                           v-model="sortBy"
                                           :options="sortOptions"
                                           :aria-describedby="ariaDescribedby"
                                           class="w-75">
                                <template #first>
                                    <option value="">-- none --</option>
                                </template>
                            </b-form-select>

                            <b-form-select v-model="sortDesc"
                                           :disabled="!sortBy"
                                           :aria-describedby="ariaDescribedby"
                                           size="sm"
                                           class="w-25">
                                <option :value="false">升序</option>
                                <option :value="true">降序</option>
                            </b-form-select>
                        </b-input-group>
                    </b-form-group>
                </b-col>
                @*初始分類模板*@
                <b-col lg="6" class="my-1">
                    <b-form-group label="初始分類"
                                  label-for="initial-sort-select"
                                  label-cols-sm="3"
                                  label-align-sm="right"
                                  label-size="sm"
                                  class="mb-0">
                        <b-form-select id="initial-sort-select"
                                       v-model="sortDirection"
                                       :options="['asc', 'desc', 'last']"
                                       size="sm"></b-form-select>
                    </b-form-group>
                </b-col>
                @*搜索模板*@
                <b-col lg="6" class="my-1">
                    <b-form-group label="搜尋"
                                  label-for="filter-input"
                                  label-cols-sm="3"
                                  label-align-sm="right"
                                  label-size="sm"
                                  class="mb-0">
                        <b-input-group size="sm">
                            <b-form-input id="filter-input"
                                          v-model="filter"
                                          type="search"
                                          placeholder="請輸入關鍵字"></b-form-input>

                            <b-input-group-append>
                                <b-button :disabled="!filter" @@click="filter = ''">清空</b-button>
                            </b-input-group-append>
                        </b-input-group>
                    </b-form-group>
                </b-col>
                @*過濾條件模板*@
                <b-col lg="6" class="my-1">
                    <b-form-group v-model="sortDirection"
                                  label="過濾條件"
                                  label-cols-sm="3"
                                  label-align-sm="right"
                                  label-size="sm"
                                  class="mb-0"
                                  v-slot="{ ariaDescribedby }">
                        <b-form-checkbox-group v-model="filterOn"
                                               :aria-describedby="ariaDescribedby"
                                               class="mt-1">
                            <b-form-checkbox value="memberName">會員名稱</b-form-checkbox>
                            <b-form-checkbox value="memberPhone">會員電話</b-form-checkbox>
                            <b-form-checkbox value="memberRegEmail">會員註冊信箱</b-form-checkbox>
                            <b-form-checkbox value="backendIdentity">會員最高權限</b-form-checkbox>
                        </b-form-checkbox-group>
                    </b-form-group>
                </b-col>
                @*顯示頁數模板*@
                <b-col sm="5" md="6" class="my-1">
                    <b-form-group label="每頁顯示筆數"
                                  label-for="per-page-select"
                                  label-cols-sm="6"
                                  label-cols-md="4"
                                  label-cols-lg="3"
                                  label-align-sm="right"
                                  label-size="sm"
                                  class="mb-0">
                        <b-form-select id="per-page-select"
                                       v-model="perPage"
                                       :options="pageOptions"
                                       size="sm"></b-form-select>
                    </b-form-group>
                </b-col>
                @*頁數模板*@
                <b-col sm="7" md="6" class="my-1">
                    <b-pagination v-model="currentPage"
                                  :total-rows="totalRows"
                                  :per-page="perPage"
                                  align="fill"
                                  size="sm"
                                  class="my-0"></b-pagination>
                </b-col>
            </b-row>

            <!-- Main table element -->
            @*主要操作的資料結構*@
            <b-table :items="items"
                     :fields="fields"
                     :current-page="currentPage"
                     :per-page="perPage"
                     :filter="filter"
                     :filter-included-fields="filterOn"
                     :sort-by.sync="sortBy"
                     :sort-desc.sync="sortDesc"
                     :sort-direction="sortDirection"
                     :busy="isBusy"
                     stacked="md"
                     show-empty
                     small
                     @@filtered="onFiltered">
                <template #cell(name)="row">
                    {{ row.value.first }} {{ row.value.last }}
                </template>

                <template #cell(actions)="row">
                    <b-button size="sm" @@click="row.toggleDetails">
                        {{ row.detailsShowing ? '收起' : '展開' }}
                    </b-button>
                    <b-button size="sm" @@click="info(row.item, row.index, $event.target)" class="mr-1" variant="success">
                        修改
                    </b-button>
                    <b-button size="sm" @@click="deleteInfo(row.item)" class="mr-1" variant="danger">
                        刪除
                    </b-button>
                </template>


                <template #row-details="row">
                    <b-card>
                        <ul v-for="">
                            <li>編號 : {{ row.item.memberId }}</li>
                            <li>最高權限 : {{ row.item.backendIdentity==true?'無':'有'}}</li>
                            <li>會員名稱 : {{ row.item.memberName}}</li>
                            <li>會員地址 : {{ row.item.memberAddress }}</li>
                            <li>會員電話 : {{ row.item.memberPhone }}</li>
                            <li>會員註冊信箱 : {{ row.item.memberRegEmail }}</li>
                            <li>會員聯絡信箱 : {{ row.item.memberConEmail }}</li>
                            <li>會員性別 : {{ row.item.gender }}</li>
                            <li>會員生日 : {{ row.item.memberBirth }}</li>
                        </ul>
                    </b-card>
                </template>
                <template #cell(backendIdentity)="data">
                    <b class="text-info">{{ data.item.backendIdentity===true?'有':'無' }}</b>
                </template>
                <template #table-busy>
                    <div class="text-center text-danger my-2">
                        <b-spinner class="align-middle"></b-spinner>
                        <strong>Loading...</strong>
                    </div>
                </template>
            </b-table>

            <!-- Info modal -->
            @*修改會員資料模板*@
            <b-modal :id="infoModal.id" :title="infoModal.title" @*@@hide="resetInfoModal"*@ @@ok="handleChangeOk" ok-title="修改" cancel-title="取消">
                <!--<pre style="font-size:18px">-->@*{{ infoModal.content }}*@
                <form ref="form" submit.stop.prevent="changeSubmit" class="edit-form">
                    <b-form-group label="會員名稱" style="height:100px"
                                  label-for="infoModal.memberName-input"
                                  invalid-feedback="此為必填選項"
                                  :state="infoModalMemberNameStateState">
                        <b-form-input id="infoModal.memberName-input"
                                      v-model="infoModal.memberName"
                                      value="infoModal.memberName"
                                      :state="infoModalMemberNameStateState"
                                      required></b-form-input>
                    </b-form-group>
                    <b-form-group label="會員生日" style="height:100px"
                                  label-for="infoModal.memberBirth-input"
                                  invalid-feedback="此為必填選項"
                                  :state="infoModalMemberBirthStateState">
                        <b-form-datepicker id="memberBirth-input"
                                           v-model="infoModal.memberBirth"
                                           value="infoModal.memberBirth"
                                           :state="infoModalMemberBirthStateState"
                                           required></b-form-datepicker>
                    </b-form-group>
                    <b-form-radio-group style="height:100px" label="會員最高權限" label-for="selected-input" invalid-feedback="Name is required" v-model="infoModal.backendIdentity" :options="options" :state="selectedState" name="radio-validation">
                        <b-form-invalid-feedback id="selected-input" :state="state">Please select one</b-form-invalid-feedback>
                        <b-form-valid-feedback id="selected-input" :state="state">Thank you</b-form-valid-feedback>
                    </b-form-radio-group>
                    <b-form-group label="會員電話(格式範例:0935-123456)" style="height:100px"
                                  label-for="infoModal.memberPhone-input"
                                  invalid-feedback="此為必填選項"
                                  :state="infoModalMemberPhoneState">
                        <b-form-input id="infoModal.memberPhone-input"
                                      v-model="infoModal.memberPhone"
                                      value="infoModal.memberPhone"
                                      :state="infoModalMemberPhoneState"
                                      required></b-form-input>
                    </b-form-group>
                    <b-form-group label="會員聯絡信箱" style="height:100px"
                                  label-for="infoModal.memberConEmail-input"
                                  invalid-feedback="此為必填選項"
                                  :state="infoModalMemberConEmailState">
                        <b-form-input id="infoModal.memberConEmail-input"
                                      v-model="infoModal.memberConEmail"
                                      value="infoModal.memberConEmail"
                                      :state="infoModalMemberConEmailState"
                                      required></b-form-input>
                    </b-form-group>
                    <b-form-group label="會員地址" style="height:100px"
                                  label-for="infoModal.memberAddress-input"
                                  invalid-feedback="此為必填選項"
                                  :state="infoModalMemberAddress">
                        <b-form-input id="infoModal.memberAddress-input"
                                      v-model="infoModal.memberAddress"
                                      value="infoModal.memberAddress"
                                      :state="infoModalMemberAddress"
                                      required></b-form-input>
                    </b-form-group>
                </form>
                @*</pre>*@
            </b-modal>
        </b-container>
    </template>
</div>
@section endJS{
    <script src="//cdn.jsdelivr.net/npm/sweetalert2@10"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/axios/0.21.1/axios.min.js" integrity="sha512-bZS47S7sPOxkjU/4Bt0zrhEtWx0y0CRkhEp8IckzK+ltifIIE9EMIMTuT/mEzoIMewUINruDBIR/jJnbguonqQ==" crossorigin="anonymous"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/moment.js/2.29.1/moment.min.js" integrity="sha512-qTXRIMyZIFb8iQcfjXWCO8+M5Tbc38Qi5WzdPOYZHIlZpzBHG3L3by84BBBOiRGiEb7KKtAOAs5qYdUiZiQNNQ==" crossorigin="anonymous"></script>
    <script>
        const member = new Vue({
            /*主要監聽對象(作用範圍)*/
            el: "#member",
            data: {
                /*主要接收API資料的儲存欄位*/
                items: [],
                /*設定Bootstrap-Vue Component DataTable 的欄位以及對應物件的Key*/
                fields: [
                    { key: 'memberId', label: '編號', sortable: true, sortDirection: 'desc' },
                    { key: 'backendIdentity', label: '最高權限', sortable: true, sortDirection: 'desc', class: 'text-center' },
                    { key: 'memberName', label: '會員名稱', class: 'text-center' },
                    { key: 'memberBirth', label: '會員生日', class: 'text-center', sortable: true, sortDirection: 'desc' },
                    { key: 'memberPhone', label: '會員電話', class: 'text-center' },
                    { key: 'memberRegEmail', label: '會員註冊信箱', class: 'text-center' },
                    { key: 'actions', label: '管理' }

                ],
                /*Bootstrap-Vue form-radio模板*/
                options: [
                    { text: '具備最高權限', value: true },
                    { text: '無具備最高權限', value: false },

                ],
                /*Bootstrap-Vue 提供模板*/
                selected: false,
                isError: false,
                isBusy: true,
                totalRows: 1,
                currentPage: 1,
                perPage: 20,
                pageOptions: [5, 10, 20, { value: 100, text: "100" }],
                sortBy: '',
                sortDesc: false,
                sortDirection: 'asc',
                filter: null,
                filterOn: [],
                /*儲存修改會員資料的變數*/
                infoModal: {
                    id: 'info-modal',
                    title: '',
                /*content: ''*/
                    memberName: "",
                    backendIdentity: false,
                    memberBirth: "",
                    memberPhone: "",
                    memberConEmail: "",
                    memberAddress: "",
                },
                /*儲存新增會員資料的變數*/
                memberName: '',
                memberPassword: '',
                memberAddress: '',
                memberPhone: '',
                memberRegEmail: '',
                memberConEmail: '',
                gender: '',
                memberBirth: '',
                memberMessage: '',
                /*新增會員資料輸入欄位的基本判斷*/
                memberNameState: null,
                memberPasswordState: null,
                memberBirthState: null,
                selectedState: null,
                memberPhoneState: null,
                memberRegEmailState: null,
                memberConEmailState: null,
                memberAddressState: null,
                /*修改會員資料輸入欄位的基本判斷*/
                infoModalMemberNameStateState: null,
                infoModalMemberBirthStateState: null,
                infoModalMemberPhoneState: null,
                infoModalMemberConEmailState: null,
                infoModalMemberAddress: null,
                /*新增會員資料AJAX發送的儲存物件*/
                submittedMember: { memberName: "", memberPassword: "", memberAddress: "", memberPhone: "", memberRegEmail: "", memberConEmail: "",  memberBirth: "", backendIdentity: false},
                /*修改會員資料AJAX發送的儲存物件*/
                changeMember: { memberId: "", memberName: "", memberPassword: "", memberAddress: "", memberPhone: "", memberRegEmail: "", memberConEmail: "", memberBirth: "", backendIdentity: false },
            /*submittedMember: { memberName: "", memberPassword: "", memberAddress: "", memberPhone: "", memberRegEmail: "", memberConEmail: "", gender: "", memberBirth: "", backendIdentity: false, memberMessage:"" }*/

            },
            /*呼叫GetAll API後將資料存在items*/
            created: function () {
                axios.get("/Api/BackendMembers/GetAll")
                    .then((res) => {
                        this.items = res.data.body.backendMemberList;
                        this.mounted();
                        this.isBusy = false;
                    });
            },
            computed: {
                sortOptions() {
                    // Create an options list from our fields
                    return this.fields
                        .filter(f => f.sortable)
                        .map(f => {
                            return { text: f.label, value: f.key }
                        })
                },
                state() {
                    return Boolean(this.value)
                }
            },
            mounted() {
                // Set the initial number of items
                this.totalRows = this.items.length
            },
            methods: {
                /*infoModal修改功能之資料結構*/
                info(item, index, button) {
                    this.infoModal.title = `修改會員編號: ${JSON.stringify(item.memberId, null, 2)}`
                /*this.infoModal.content = `會員編號:${JSON.stringify(item.memberId, null, 2)}\n\n最高權限:${JSON.stringify(item.backendIdentity, null, 2) == true ? "有" : "無"}\n\n會員姓名:${JSON.stringify(item.memberName, null, 2)}\n\n會員地址:${JSON.stringify(item.memberAddress, null, 2)}\n\n會員手機:${JSON.stringify(item.memberPhone, null, 2)}\n\n會員註冊信箱:${JSON.stringify(item.memberRegEmail, null, 2)}\n\n會員聯絡信箱:${JSON.stringify(item.memberConEmail, null, 2)}\n\n會員性別:${JSON.stringify(item.gender, null, 2)}\n\n會員生日:${JSON.stringify(item.memberBirth, null, 2)}`*/
                    this.infoModal.memberId = item.memberId;
                    this.infoModal.memberName = item.memberName;
                    this.infoModal.memberBirth = new Date (item.memberBirth);
                    this.infoModal.memberPhone = item.memberPhone;
                    this.infoModal.memberConEmail = item.memberConEmail;
                    this.infoModal.memberAddress = item.memberAddress;
                    this.infoModal.backendIdentity = item.backendIdentity;

                    this.$root.$emit('bv::show::modal', this.infoModal.id, button)
                },
                /*刪除功能之資料結構及AJAX*/
                deleteInfo(item) {
                    var self = this;

                    swal.fire({
                        title: '您確定刪除此會員?',
                        text: '您將無法回復該筆資料！',
                        type: 'warning',
                        showCancelButton: true,
                        confirmButtonColor: '#3085d6',
                        cancelButtonColor: '#d33',
                        confirmButtonText: '確定刪除！',
                    }).then(function (result) {
                        if (result.isConfirmed) {
                            $.ajax({
                                url: "/Api/BackendMembers/DeleteBackendMember",
                                method: "DELETE",
                                dataType: "json",//如果json回傳資料，則須加上此行，若無勿加此行，會引起parse error
                                data: JSON.stringify(item),
                                contentType: "application/ json; charset = UTF - 8",
                                success: function (data, textStatus, jqXHR) {
                                    if (data.msg == "刪除成功") {
                                        /*(非同步)刪除成功後，於前端將data中的該筆會員刪除*/
                                        let deleteMemberIndex = self.items.findIndex(x => x.memberId == item.memberId);
                                        self.items.splice(deleteMemberIndex, 1);
                                        Swal.fire(
                                            '刪除!',
                                            '此筆會員資料已被刪除。',
                                            'success'
                                        );

                                    }
                                    else {
                                        console.log(data);
                                        Swal.fire({
                                            icon: 'error',
                                            title: 'Oops...',
                                            text: '刪除失敗，請再試一次',

                                        });
                                    }
                                },
                                error: function (jqXHR, textStatus, errorThrown) {
                                    console.log(textStatus + ", " + jqXHR.status);

                                    Swal.fire({
                                        icon: 'error',
                                        title: 'Oops...',
                                        text: '刪除失敗，請再試一次',

                                    });
                                }
                            })

                        }



                    })

                    /*this.infoModal.memberId = item.memberId;*/



                },
                /*重置infoModal修改功能*/
                resetInfoModal() {
                    this.infoModal.title = ''
                    /*this.infoModal.content = ''*/
                    this.infoModal.memberName = '';
                    this.infoModal.memberBirth = '';
                    this.infoModal.memberPhone  = '';
                    this.infoModal.memberConEmail = '';
                    this.infoModal.memberAddress = '';
                    this.infoModal.backendIdentity = false;

                },
                onFiltered(filteredItems) {
                    // Trigger pagination to update the number of buttons/pages due to filtering
                    this.totalRows = filteredItems.length
                    this.currentPage = 1
                },
                mounted() {
                    // Set the initial number of items
                    this.totalRows = this.items.length
                },
                /*監看新增輸入欄位是否符合規定*/
                checkFormValidity() {
                    const valid = this.$refs.form.checkValidity()

                    this.memberNameState = valid

                    this.memberPasswordState = valid

                    this.memberBirthState = valid

                    this.memberPhoneState = valid

                    this.selectedState = valid

                    this.memberRegEmailState = valid;
                    this.memberConEmailState = valid;
                    this.memberAddressState = valid;




                    return valid
                },
                /*監看修改輸入欄位是否符合規定*/
                checkChangeFormValidity() {
                    const valid = this.$refs.form.checkValidity()

                    this.infoModalMemberNameStateState = valid

                    this.infoModalMemberBirthStateState = valid

                    this.infoModalMemberPhoneState = valid

                    this.infoModalMemberConEmailState = valid

                    this.infoModalMemberAddress = valid
                    return valid

                },
                /*重置新增功能*/
                resetModal() {
                    this.memberName = ''
                    this.memberNameState = null
                    this.memberPassword=''
                    this.memberPasswordState = null
                    this.memberBirth=''
                    this.memberBirthState = null
                    this.memberPhone = ''
                    this.memberPhoneState = null
                    this.memberRegEmail = ''
                    this.memberRegEmailState = null
                    this.memberConEmail = ''
                    this.memberConEmailState = null
                    this.memberAddress = ''
                    this.memberAddressState = null
                    this.selectedState = null


                },
                handleOk(bvModalEvt) {
                    // Prevent modal from closing
                    bvModalEvt.preventDefault()
                    // Trigger submit handler
                    this.handleSubmit()
                },
                handleChangeOk(bvModalEvt) {
                    // Prevent modal from closing
                    bvModalEvt.preventDefault()
                    // Trigger submit handler
                    this.changeSubmit()
                },
                /*符合規定之後，向後端以jqeury AJAX發送POST新增會員請求*/
                handleSubmit() {
                    // Exit when the form isn't valid
                    if (!this.checkFormValidity()) {
                        return
                    }
                    // Push the name to submittedMember
                    this.submittedMember.memberName = this.memberName
                    this.submittedMember.memberPassword = this.memberPassword
                    this.submittedMember.memberBirth = this.memberBirth
                    this.submittedMember.backendIdentity = this.selected
                    this.submittedMember.memberPhone = this.memberPhone
                    this.submittedMember.memberRegEmail = this.memberRegEmail
                    this.submittedMember.memberConEmail = this.memberConEmail
                    this.submittedMember.memberAddress = this.memberAddress
                    var self = this;
                    $.ajax({
                        url: "/Api/BackendMembers/PostBackendMember",
                        method: "POST",
                        dataType: "json",//如果json回傳資料，則須加上此行，若無勿加此行，會引起parse error
                        contentType: "application/json;charset=UTF-8",
                        data: JSON.stringify(this.submittedMember),
                        success: function (data, textStatus, jqXHR) {
                            if (data.title == "Not Found") {
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: '新增失敗，請再試一次',

                                });
                            }
                            else {
                                /*(非同步)新增成功後，，於前端將data中新增該筆會員 */
                                self.items.push(data.body);

                                Swal.fire({
                                    position: 'top-end',
                                    icon: 'success',
                                    title: '成功新增後台會員',
                                    showConfirmButton: false,
                                    timer: 1500
                                });
                            }


                        },
                        error: function (jqXHR, textStatus, errorThron) {

                            console.log(textStatus + ", " + jqXHR.state);
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: '新增失敗，請再試一次',

                            });

                        }

                    })

                    // Hide the modal manually
                    this.$nextTick(() => {
                        this.$bvModal.hide('modal-prevent-closing');

                    })
                },
                /*符合規定之後，向後端以jqeury AJAX發送PUT修改會員請求*/
                changeSubmit() {
                    if (!this.checkChangeFormValidity()) {
                        return
                    }
                    this.changeMember.memberName = this.infoModal.memberName
                    this.changeMember.memberBirth = this.infoModal.memberBirth
                    this.changeMember.backendIdentity = this.infoModal.backendIdentity
                    this.changeMember.memberPhone = this.infoModal.memberPhone
                    this.changeMember.memberConEmail = this.infoModal.memberConEmail
                    this.changeMember.memberAddress = this.infoModal.memberAddress
                    this.changeMember.memberId = this.infoModal.memberId

                    var self = this;

                    $.ajax({
                        url: "/Api/BackendMembers/PutBackendMember",
                        method: "PUT",
                        dataType: "json",//如果json回傳資料，則須加上此行，若無勿加此行，會引起parse error
                        contentType: "application/json;charset=UTF-8",
                        data: JSON.stringify(this.changeMember),
                        success: function (data, textStatus, jqXHR) {
                            if (data.msg == "修改成功") {
                                /*(非同步)修改成功後，於前端將data中該筆會員的資料一併修改*/
                                let editMemberIndex = self.items.findIndex(x => x.memberId == self.changeMember.memberId);
                                self.items[editMemberIndex].backendIdentity = self.changeMember.backendIdentity;
                                self.items[editMemberIndex].memberAddress = self.changeMember.memberAddress;
                                self.items[editMemberIndex].memberBirth = moment(self.changeMember.memberBirth).format('YYYY/M/D');
                                self.items[editMemberIndex].memberConEmail = self.changeMember.memberConEmail;
                                self.items[editMemberIndex].memberName = self.changeMember.memberName;
                                self.items[editMemberIndex].memberPhone = self.changeMember.memberPhone;

                                Swal.fire({
                                    position: 'top-end',
                                    icon: 'success',
                                    title: '修改成功',
                                    showConfirmButton: false,
                                    timer: 1500
                                });

                            }
                            else {
                                console.log(data);
                                Swal.fire({
                                    icon: 'error',
                                    title: 'Oops...',
                                    text: '修改失敗，請再試一次',

                                });
                            }

                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            console.log(textStatus + ", " + jqXHR.state);
                            Swal.fire({
                                icon: 'error',
                                title: 'Oops...',
                                text: '修改失敗，請再試一次',

                            });
                        }
                    })

                }
            },
            //watch: {
            //    "memberRegEmail": function () {

            //        var isMail = /^\w+((-\w+)|(\.\w+))*\@@[A-Za-z0-9]+((\.|-)[A-Za-z0-9]+)*\.[A-Za-z]+$/;
            //        if (!isMail.test(this.memberRegEmail)) {
            //            this.memberRegEmailState = false;
            //        }
            //        else {
            //            this.memberRegEmailState = null;
            //        }
            //    }
            //}


        })
    </script>
}



